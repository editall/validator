import { Rule } from "./rule";
export declare class Rules {
    #private;
    ruleList: [Rule, string | undefined][];
    rule(rule: Rule, message?: string): void;
    asNumber(message?: string): void;
    asInt(message?: string): void;
    asBool(message?: string): void;
    asString(message?: string): void;
    runTrim(message?: string): void;
    runOneLine(message?: string): void;
    isLength(length: number, message?: string): void;
    isMinLength(length: number, message?: string): void;
    isMaxLength(length: number, message?: string): void;
    isRangeLength(min: number, max: number, message?: string): void;
    isNotRangeLength(min: number, max: number, message?: string): void;
    isLessThan(base: number, message?: string): void;
    isGreaterThan(base: number, message?: string): void;
    isRange(min: number, max: number, message?: string): void;
    isNotRange(min: number, max: number, message?: string): void;
    isStartWith(v: string, message?: string): void;
    isNotStartWith(v: string, message?: string): void;
    isEndWith(v: string, message?: string): void;
    isNotEndWith(v: string, message?: string): void;
    isContains(message?: string | undefined, ...goals: any[]): void;
    isNotContains(message?: string | undefined, ...goals: any[]): void;
    isEqual(goal: any, message?: string): void;
    isNotEqual(goal: any, message?: string): void;
    isNumber(message?: string): void;
    isNotNumber(message?: string): void;
    isString(message?: string): void;
    isNotString(message?: string): void;
    isBool(message?: string): void;
    isNotBool(message?: string): void;
    isBlank(message?: string): void;
    isNotBlank(message?: string): void;
    isEmpty(message?: string): void;
    isNotEmpty(message?: string): void;
    isIp(message?: string): void;
    isUrl(message?: string): void;
    isEmail(message?: string): void;
    isLowerCase(message?: string): void;
    isUpperCase(message?: string): void;
    isNumberString(message?: string): void;
    isIntString(message?: string): void;
    isLowerNumber(message?: string): void;
    isUpperNumber(message?: string): void;
    isAlphaNumber(message?: string): void;
    isAlphaNumberSpace(message?: string): void;
    isFirstLower(message?: string): void;
    isFirstUpper(message?: string): void;
}
